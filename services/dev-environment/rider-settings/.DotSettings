<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeEditing/GenerateMemberBody/DocumentationGenerationKind/@EntryValue">Copy</s:String>
	<s:String x:Key="/Default/CodeEditing/NullCheckPatterns/CustomStatementPatternText/@EntryValue">// Use the following placeholders:&#xD;
// $EXPR$    -- source expression&#xD;
// $NAME$    -- source name (string literal or 'nameof' expression)&#xD;
// $MESSAGE$ -- string literal in the form of "$NAME$ != null"&#xD;
if ($EXPR$ == null) throw new System.ArgumentNullException($NAME$);</s:String>
	<s:Int64 x:Key="/Default/CodeEditing/NullCheckPatterns/PatternTypeNamesToPriority/=JetBrains_002EReSharper_002EFeature_002EServices_002ECSharp_002ENullChecking_002EContractRequiresPattern/@EntryIndexedValue">200</s:Int64>
	<s:Int64 x:Key="/Default/CodeEditing/NullCheckPatterns/PatternTypeNamesToPriority/=JetBrains_002EReSharper_002EFeature_002EServices_002ECSharp_002ENullChecking_002ECustomStatementBasedPattern/@EntryIndexedValue">50</s:Int64>
	<s:Int64 x:Key="/Default/CodeEditing/NullCheckPatterns/PatternTypeNamesToPriority/=JetBrains_002EReSharper_002EFeature_002EServices_002ECSharp_002ENullChecking_002EDebugAssertPattern/@EntryIndexedValue">100</s:Int64>
	<s:Int64 x:Key="/Default/CodeEditing/NullCheckPatterns/PatternTypeNamesToPriority/=JetBrains_002EReSharper_002EFeature_002EServices_002ECSharp_002ENullChecking_002EGenericContractRequiresPattern/@EntryIndexedValue">199</s:Int64>
	<s:Int64 x:Key="/Default/CodeEditing/NullCheckPatterns/PatternTypeNamesToPriority/=JetBrains_002EReSharper_002EFeature_002EServices_002ECSharp_002ENullChecking_002EIfReferenceEqualsThenThrowPattern/@EntryIndexedValue">500</s:Int64>
	<s:Int64 x:Key="/Default/CodeEditing/NullCheckPatterns/PatternTypeNamesToPriority/=JetBrains_002EReSharper_002EFeature_002EServices_002ECSharp_002ENullChecking_002EIfThenThrowPattern/@EntryIndexedValue">3000</s:Int64>
	<s:Int64 x:Key="/Default/CodeEditing/NullCheckPatterns/PatternTypeNamesToPriority/=JetBrains_002EReSharper_002EFeature_002EServices_002ECSharp_002ENullChecking_002EPatternMatchingIfThenThrowPattern/@EntryIndexedValue">1000</s:Int64>
	<s:Int64 x:Key="/Default/CodeEditing/NullCheckPatterns/PatternTypeNamesToPriority/=JetBrains_002EReSharper_002EFeature_002EServices_002ECSharp_002ENullChecking_002EThrowExpressionNullCheckPattern/@EntryIndexedValue">5000</s:Int64>
	<s:Int64 x:Key="/Default/CodeEditing/NullCheckPatterns/PatternTypeNamesToPriority/=JetBrains_002EReSharper_002EFeature_002EServices_002ECSharp_002ENullChecking_002ETraceAssertPattern/@EntryIndexedValue">99</s:Int64>
	<s:String x:Key="/Default/CodeInspection/Highlighting/AnalysisEnabled/@EntryValue">SOLUTION</s:String>
	<s:Boolean x:Key="/Default/CodeInspection/Highlighting/IdentifierHighlightingEnabled/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeAccessorOwnerBody/@EntryIndexedValue">HINT</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeConstructorOrDestructorBody/@EntryIndexedValue">HINT</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeLocalFunctionBody/@EntryIndexedValue">HINT</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeMethodOrOperatorBody/@EntryIndexedValue">HINT</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeTypeMemberModifiers/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeTypeModifiers/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceDoWhileStatementBraces/@EntryIndexedValue">WARNING</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceFixedStatementBraces/@EntryIndexedValue">WARNING</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceForeachStatementBraces/@EntryIndexedValue">WARNING</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceForStatementBraces/@EntryIndexedValue">WARNING</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceIfStatementBraces/@EntryIndexedValue">WARNING</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceLockStatementBraces/@EntryIndexedValue">WARNING</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceUsingStatementBraces/@EntryIndexedValue">WARNING</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceWhileStatementBraces/@EntryIndexedValue">WARNING</s:String>
	
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=StyleCop/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="StyleCop"&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;CSCodeStyleAttributes ArrangeTypeAccessModifier="True" ArrangeTypeMemberAccessModifier="True" SortModifiers="True" RemoveRedundantParentheses="True" AddMissingParentheses="True" ArrangeBraces="True" ArrangeAttributes="True" ArrangeArgumentsStyle="True" ArrangeVarStyle="True" ArrangeCodeBodyStyle="True" ArrangeTrailingCommas="True" ArrangeObjectCreation="True" ArrangeDefaultValue="True" ArrangeNamespaces="True" /&gt;&lt;RemoveCodeRedundancies&gt;True&lt;/RemoveCodeRedundancies&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSArrangeQualifiers&gt;True&lt;/CSArrangeQualifiers&gt;&lt;CSFixBuiltinTypeReferences&gt;True&lt;/CSFixBuiltinTypeReferences&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;/CSOptimizeUsings&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSharpFormatDocComments&gt;True&lt;/CSharpFormatDocComments&gt;&lt;XAMLCollapseEmptyTags&gt;False&lt;/XAMLCollapseEmptyTags&gt;&lt;CSUseAutoProperty&gt;True&lt;/CSUseAutoProperty&gt;&lt;/Profile&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/SilentCleanupProfile/@EntryValue"></s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/CONSTRUCTOR_OR_DESTRUCTOR_BODY/@EntryValue">ExpressionBody</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/LOCAL_FUNCTION_BODY/@EntryValue">ExpressionBody</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/METHOD_OR_OPERATOR_BODY/@EntryValue">ExpressionBody</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARGUMENT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXPRESSION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_FOR_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_LIST/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_TUPLE_COMPONENTS/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGNMENT_TAB_FILL_STYLE/@EntryValue">OPTIMAL_FILL</s:String>
	
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_FIELD/@EntryValue">1</s:Int64>
	
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_AUTO_PROPERTY/@EntryValue">0</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_LOCAL_METHOD/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_PROPERTY/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_BEFORE_MULTILINE_STATEMENTS/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_INSIDE_REGION/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_FIXED_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_FOR_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_FOREACH_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_LOCK_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_USINGS_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_WHILE_STMT/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_STYLE/@EntryValue">Space</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_DECLARATION_PARENS_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_EMBEDDED_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_EXPR_MEMBER_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_INITIALIZER_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_INVOCATION_PARENS_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_USER_LINEBREAKS/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/LINE_FEED_AT_FILE_END/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CONSTRUCTOR_INITIALIZER_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ANONYMOUSMETHOD_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_EMBEDDED_STATEMENT_ON_SAME_LINE/@EntryValue">NEVER</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_INITIALIZER_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_WHILE_ON_NEW_LINE/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BETWEEN_ATTRIBUTE_SECTIONS/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/STICK_COMMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/USE_INDENT_FROM_VS/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARGUMENTS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARRAY_INITIALIZER_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_BINARY_EXPRESSIONS/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_METHOD_CALLS/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_EXTENDS_LIST_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LIMIT/@EntryValue">180</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_OBJECT_AND_COLLECTION_INITIALIZER_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/IndentTagContent/@EntryValue">ZeroIndent</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/XmlDocFormatter/USE_INDENT_FROM_VS/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&#xD;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
  &lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;And&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="True" /&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Region Name="Data"&gt;&#xD;
      &lt;Region Name="Consts"&gt;&#xD;
        &lt;Entry DisplayName="consts"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Access Is="Any" /&gt;&#xD;
              &lt;Kind Is="Constant" /&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Region&gt;&#xD;
      &lt;Region Name="Static"&gt;&#xD;
        &lt;Entry DisplayName="static"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Access Is="Any" /&gt;&#xD;
              &lt;Kind Is="Field" /&gt;&#xD;
              &lt;Static /&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Region&gt;&#xD;
      &lt;Region Name="Fields"&gt;&#xD;
        &lt;Entry DisplayName="fields"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Access Is="Any" /&gt;&#xD;
              &lt;Kind Is="Field" /&gt;&#xD;
              &lt;Not&gt;&#xD;
                &lt;And&gt;&#xD;
                  &lt;Static /&gt;&#xD;
                  &lt;Kind Is="Constant" /&gt;&#xD;
                &lt;/And&gt;&#xD;
              &lt;/Not&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Region&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name=".ctor"&gt;&#xD;
      &lt;Entry DisplayName="Constructor"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Kind Is="Constructor" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="Setup/Teardown"&gt;&#xD;
      &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;Or&gt;&#xD;
              &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;&#xD;
              &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;&#xD;
              &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;&#xD;
              &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;/Or&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="Test methods"&gt;&#xD;
      &lt;Entry DisplayName="Test Methods" Priority="100"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="Properties"&gt;&#xD;
      &lt;Entry DisplayName="auto properties" Priority="150"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="Any" /&gt;&#xD;
            &lt;Kind Is="Autoproperty" /&gt;&#xD;
            &lt;Not&gt;&#xD;
              &lt;ImplementsInterface /&gt;&#xD;
            &lt;/Not&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="properties" Priority="100"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="Any" /&gt;&#xD;
            &lt;Kind Is="Property" /&gt;&#xD;
            &lt;Not&gt;&#xD;
              &lt;ImplementsInterface /&gt;&#xD;
            &lt;/Not&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="indexer"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="Any" /&gt;&#xD;
            &lt;Kind Is="Indexer" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="Public"&gt;&#xD;
      &lt;Entry DisplayName="public" Priority="100"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="Public" /&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;Not&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Override /&gt;&#xD;
                &lt;Abstract /&gt;&#xD;
                &lt;Virtual /&gt;&#xD;
                &lt;Kind Is="Operator" /&gt;&#xD;
                &lt;ImplementsInterface /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/Not&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="internal"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="Internal" /&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;Not&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Override /&gt;&#xD;
                &lt;Abstract /&gt;&#xD;
                &lt;Virtual /&gt;&#xD;
                &lt;Kind Is="Operator" /&gt;&#xD;
                &lt;ImplementsInterface /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/Not&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="Protected"&gt;&#xD;
      &lt;Entry DisplayName="protected" Priority="100"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="Protected" /&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;Not&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Override /&gt;&#xD;
                &lt;Abstract /&gt;&#xD;
                &lt;Virtual /&gt;&#xD;
                &lt;Kind Is="Operator" /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/Not&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="internal protected"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="ProtectedInternal" /&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;Not&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Override /&gt;&#xD;
                &lt;Abstract /&gt;&#xD;
                &lt;Virtual /&gt;&#xD;
                &lt;Kind Is="Operator" /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/Not&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="Overridable"&gt;&#xD;
      &lt;Entry DisplayName="abstract and virtual"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="Any" /&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;Or&gt;&#xD;
              &lt;Abstract /&gt;&#xD;
              &lt;Virtual /&gt;&#xD;
            &lt;/Or&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Abstract /&gt;&#xD;
          &lt;Virtual /&gt;&#xD;
          &lt;Access /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="Overrided"&gt;&#xD;
      &lt;Entry DisplayName="overrided"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Override /&gt;&#xD;
            &lt;Access Is="Any" /&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="Private"&gt;&#xD;
      &lt;Entry DisplayName="private"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;HandlesEvent /&gt;&#xD;
              &lt;Access Is="Private" /&gt;&#xD;
            &lt;/And&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Access Is="Private" /&gt;&#xD;
              &lt;Kind Is="Method" /&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="Other"&gt;&#xD;
      &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="Nested type: ${0}"&gt;&#xD;
      &lt;Region.GroupBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Region.GroupBy&gt;&#xD;
      &lt;Entry DisplayName="Nested types"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Kind Is="Type" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="MyStyleCop"&gt;&#xD;
    &lt;DependencyProperty DisplayName="Dependency Properties" Priority="100"&gt;&#xD;
      &lt;Entry DisplayName="DP Key"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;DependencyPropertyPart Match="Key" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="DP Field"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;DependencyPropertyPart /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="DP Handler"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;DependencyPropertyPart Match="Handler" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="DP Property"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;DependencyPropertyPart Match="Property" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="Attached DP Getter"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;DependencyPropertyPart Match="Getter" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="Attached DP Setter"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;DependencyPropertyPart Match="Setter" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/DependencyProperty&gt;&#xD;
    &lt;Entry DisplayName="extern"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Extern /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="consts"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Constant" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="static"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
          &lt;Static /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="fields"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Static /&gt;&#xD;
              &lt;Kind Is="Constant" /&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="events"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Event" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Is="Member" /&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="static constructor"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Static /&gt;&#xD;
          &lt;Kind Is="Constructor" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="constructors"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Constructor" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="destructor"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Destructor" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="auto properties" Priority="150"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Autoproperty" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;ImplementsInterface /&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="properties" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Property" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;ImplementsInterface /&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="indexer"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Indexer" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="public" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Or&gt;&#xD;
              &lt;Override /&gt;&#xD;
              &lt;Abstract /&gt;&#xD;
              &lt;Virtual /&gt;&#xD;
              &lt;Kind Is="Operator" /&gt;&#xD;
              &lt;ImplementsInterface /&gt;&#xD;
            &lt;/Or&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="internal"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Internal" /&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Or&gt;&#xD;
              &lt;Override /&gt;&#xD;
              &lt;Abstract /&gt;&#xD;
              &lt;Virtual /&gt;&#xD;
              &lt;Kind Is="Operator" /&gt;&#xD;
              &lt;ImplementsInterface /&gt;&#xD;
            &lt;/Or&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="protected" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Protected" /&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Or&gt;&#xD;
              &lt;Override /&gt;&#xD;
              &lt;Abstract /&gt;&#xD;
              &lt;Virtual /&gt;&#xD;
              &lt;Kind Is="Operator" /&gt;&#xD;
            &lt;/Or&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="internal protected"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="ProtectedInternal" /&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Or&gt;&#xD;
              &lt;Override /&gt;&#xD;
              &lt;Abstract /&gt;&#xD;
              &lt;Virtual /&gt;&#xD;
              &lt;Kind Is="Operator" /&gt;&#xD;
            &lt;/Or&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="abstract and virtual"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;Abstract /&gt;&#xD;
            &lt;Virtual /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Abstract /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="implementation"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Member" /&gt;&#xD;
          &lt;ImplementsInterface /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="overrided"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Override /&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="private"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;HandlesEvent /&gt;&#xD;
            &lt;Access Is="Private" /&gt;&#xD;
          &lt;/And&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="Private" /&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="operators"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Operator" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="nested classes" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Class" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="nested structs"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Struct" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="enums"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Enum" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="delegates"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Any" /&gt;&#xD;
          &lt;Kind Is="Delegate" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Is="Member" /&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
&lt;/Patterns&gt;</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/EditorConfig/SyncToVisualStudio/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAlwaysTreatStructAsNotReorderableMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/TextControl/HighlightCurrentLine/@EntryValue">True</s:Boolean></wpf:ResourceDictionary>